# Generated by Django 5.2.3 on 2025-06-24 00:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('code', models.CharField(choices=[('pos_view', 'Ver POS'), ('pos_create_sale', 'Crear Venta'), ('pos_cancel_sale', 'Cancelar Venta'), ('pos_manage_cash', 'Gestionar Caja'), ('inventory_view', 'Ver Inventario'), ('inventory_create', 'Crear Productos'), ('inventory_edit', 'Editar Productos'), ('inventory_delete', 'Eliminar Productos'), ('inventory_adjust', 'Ajustar Stock'), ('invoice_view', 'Ver Facturas'), ('invoice_create', 'Crear Facturas'), ('invoice_edit', 'Editar Facturas'), ('invoice_cancel', 'Anular Facturas'), ('invoice_send_sri', 'Enviar a SRI'), ('reports_view', 'Ver Reportes'), ('reports_export', 'Exportar Reportes'), ('reports_financial', 'Reportes Financieros'), ('admin_users', 'Gestionar Usuarios'), ('admin_settings', 'Configurar Sistema'), ('admin_backup', 'Gestionar Respaldos')], max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('module', models.CharField(max_length=50, verbose_name='Módulo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
            ],
            options={
                'verbose_name': 'Permiso',
                'verbose_name_plural': 'Permisos',
                'db_table': 'users_permission',
                'ordering': ['module', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('code', models.CharField(choices=[('admin', 'Administrador'), ('manager', 'Gerente'), ('cashier', 'Cajero'), ('inventory_manager', 'Encargado de Inventario'), ('accountant', 'Contador'), ('sales_rep', 'Vendedor'), ('viewer', 'Solo Lectura')], max_length=20, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado en')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'users_role',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('cedula', 'Cédula'), ('ruc', 'RUC'), ('passport', 'Pasaporte')], default='cedula', max_length=10, verbose_name='Tipo de Documento')),
                ('document_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Solo se permiten números.', regex='^[0-9]+$')], verbose_name='Número de Documento')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Formato de teléfono inválido.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('user_type', models.CharField(choices=[('admin', 'Administrador'), ('employee', 'Empleado'), ('customer', 'Cliente')], default='employee', max_length=20, verbose_name='Tipo de Usuario')),
                ('employee_code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Código de Empleado')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Contratación')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Departamento')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Cargo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='Intentos de Login Fallidos')),
                ('last_password_change', models.DateTimeField(blank=True, null=True, verbose_name='Último Cambio de Contraseña')),
                ('force_password_change', models.BooleanField(default=False, verbose_name='Forzar Cambio de Contraseña')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado en')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='Última Actividad')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='vendo_users', related_query_name='vendo_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='vendo_users', related_query_name='vendo_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users_user',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('granted_at', models.DateTimeField(auto_now_add=True, verbose_name='Otorgado en')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to='users.user')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'verbose_name': 'Permiso de Usuario',
                'verbose_name_plural': 'Permisos de Usuario',
                'db_table': 'users_user_permission',
                'unique_together': {('user', 'permission')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='vendo_users', through='users.UserPermission', through_fields=('user', 'permission'), to='users.permission'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biografía')),
                ('theme', models.CharField(choices=[('light', 'Claro'), ('dark', 'Oscuro'), ('auto', 'Automático')], default='light', max_length=10, verbose_name='Tema')),
                ('language', models.CharField(choices=[('es', 'Español'), ('en', 'English')], default='es', max_length=5, verbose_name='Idioma')),
                ('timezone', models.CharField(default='America/Guayaquil', max_length=50, verbose_name='Zona Horaria')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notificaciones por Email')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='Notificaciones por SMS')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Notificaciones Push')),
                ('default_pos_session_timeout', models.PositiveIntegerField(default=60, verbose_name='Timeout de Sesión POS (minutos)')),
                ('auto_print_receipts', models.BooleanField(default=True, verbose_name='Imprimir Recibos Automáticamente')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado en')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.user')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
                'db_table': 'users_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Asignado en')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to='users.user')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'verbose_name': 'Rol de Usuario',
                'verbose_name_plural': 'Roles de Usuario',
                'db_table': 'users_user_role',
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='vendo_users', through='users.UserRole', through_fields=('user', 'role'), to='users.role'),
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='Clave de Sesión')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Ubicación')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada en')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Última Actividad')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='users.user')),
            ],
            options={
                'verbose_name': 'Sesión de Usuario',
                'verbose_name_plural': 'Sesiones de Usuario',
                'db_table': 'users_user_session',
                'ordering': ['-last_activity'],
            },
        ),
    ]
